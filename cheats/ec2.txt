Good guide at https://help.ubuntu.com/community/EC2StartersGuide

Quick guide to semi-automated creation/deployment:

  # make sure your .bashrc is set up to set env variables (see later in this file)
  ec2-add-keypair test-keypair > test-keypair.pem
  ec2-run-instances -k test-keypair ami-8c1fece5
  ec2-describe-instances # to get public DNS of machine
  chmod a-r test-keypair.pem
  chmod u+r test-keypair.pem
  mv test-keypair.pem ~/.ssh
  ssh -i ~/.ssh/test-keypair.pem ec2-user@ec2-50-16-105-234.compute-1.amazonaws.com
  # use sudo visudo to comment out line "Defaults    requiretty"
  vi setup_commands.txt
  ssh -i ~/.ssh/test-keypair.pem ec2-user@ec2-50-16-105-234.compute-1.amazonaws.com < setup_commands.txt
  scp -i ~/.ssh/test-keypair.pem SOMEFILE ec2-user@ec2-50-16-105-234.compute-1.amazonaws.com:/home/ec2-user
  # create and associate an elastic IP
  ec2-allocate-address
  ec2-associate-address 107.20.254.213 -i i-ff97529e
  # once you're ready to kill it...
  ec2-terminate-instances i-ff97529e

Make sure any keys used for SSHing have correct permissions:

  chmod a-r ~/.ssh/<keyfile>
  chmod u+r ~/.ssh/<keyfile>

Add to ~/.bashrc:

  export EC2_CERT=<location of X.509 cert>
  export EC2_PRIVATE_KEY=<location of X.509 private key>
  export JAVA_HOME=/usr/lib/jvm/java-6-openjdk/

Read in .bashrc:

  source ~/.bashrc

List available instances via:

  ec2-describe-images -o self -o amazon

Run something with your own AMI:

  ec2-run-instances ami-aaec14c3

Generate keypair (???):

  ec2-add-keypair ec2-keypair > ec2-keypair.pem

Run something with stock AMI (designating an instance size):

  ec2-run-instances <ami ID> -k ec2-keypair -t c1.xlarge

See status of instances:

  ec2-describe-instances

Authorize SSH:

  ec2-authorize default -p 22

Then you can SSH in using:

  ssh -i <location of key> ec2-user@address.of.instance

Terminate instance (ID is in format: i-xxxxxxxx):

  ec2-terminate-instances <instance ID>
